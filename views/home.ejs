<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>FitMove</title>
    <style>
      /* Generic CSS */
      body,
      html {
        padding: 0;
        margin: 0;
        font-size: 16px;
        font-family: sans-serif;
      }
      #app {
        width: 100%;
        height: 100vh;
        filter: opacity(1);
        transition: 0.5s;
        transition-property: filter;
      }
      #app.transition {
        filter: opacity(0);
      }
      .symbols {
        position: absolute;
        top: 50;
        left: 50;
      }
      .O,
      .X,
      .Q {
        max-height: 100%;
        max-width: 100%;
        display: none;
      }

      /* Home CSS */
      /* Ready CSS */
      #app.ready-screen {
        background-color: black;
        display: flex;
        justify-content: center;
        align-items: center;
      }
      .ready-content {
        color: white;
        text-align: center;
      }
      .ready-content > img {
        max-width: 500px;
        width: 80%;
      }
      /* Game CSS */
      #app.game-screen {
        background-color: cornsilk;
      }
      .game-header {
        width: 100%;
        box-sizing: border-box;
        padding: 0 5em;
        height: calc(20vh - 3em);
        background-color: goldenrod;
        display: flex;
        align-items: center;
        justify-content: space-between;
      }

      .timer-bar {
        width: 100%;
        height: 3em;
        background-color: green;
        transform-origin: left center;
      }

      .timer-bar.animation.mirror {
        /* background: green; */
        animation: timerBar 7s ease-out 1;
      }
      .timer-bar.animation.memory {
        animation: timerBar 30s ease-out 1;
      }

      @keyframes timerBar {
        0% {
          transform: scaleX(1);
          background-color: green;
        }
        100% {
          transform: scaleX(0);
          background-color: red;
        }
      }
      #memoText {
        padding: 2em;
        background-color: rgba(0, 0, 0, 0.5);
        color: white;
      }
      .game-main {
        background-color: gray;
        height: 60vh;
        background-size: cover;
        background-repeat: no-repeat;
        background-position: bottom center;
        box-sizing: border-box;
        display: flex;
        justify-content: space-around;
        align-items: center;
      }

      .star-icon {
        width: 4em;
      }

      .star-bar {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        height: 55vh;
      }

      .star-container {
        display: flex;
        justify-content: center;
        align-items: center;
      }

      .star-prog-bar {
        width: 2.3em;
        height: 55vh;
        margin-left: 1em;
        transition: 0.5s;
        transform: scaleY(0);
        transform-origin: bottom center;
        background-color: green;
      }

      .main-pose-img {
        height: 45vh;
        position: relative;
      }
      .game-main > .symbols {
        height: 30vh;
      }
      /* Footer Bar */
      .pose-container {
        height: 20vh;
        background-color: blue;
        width: 100%;
        overflow: hidden;
      }
      .pose-bar {
        white-space: nowrap;
        height: 20vh;
        width: 10000px;
        transition: 0.5s;
        display: flex;
        align-items: center;
      }
      .pose-bar > .cell {
        max-height: 16vh;
        width: 20em;
        display: flex;
        justify-content: center;
        align-items: center;
      }
      .cell > img {
        max-height: 16vh;
        width: 100%;
        object-fit: contain;
        position: relative;
      }
      .cell.pose > img.pose-img {
        display: block;
      }
      .cell.pose > img.q-img {
        display: none;
      }
      .cell.q-mode > img.pose-img {
        display: none;
      }
      .cell.q-mode > img.q-img {
        display: block;
      }
      .cell > .symbols {
        height: 100%;
        display: flex;
        max-height: 16vh;
      }
      .game-screen-modal {
        position: absolute;
        width: 100%;
        height: 100vh;
        z-index: 999;
        background-color: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
        display: none;
      }
      .game-screen-modal > h1#countdown {
        color: white;
        font-size: 30em;
      }
      .result-modal-backdrop {
        position: absolute;
        width: 100%;
        height: 100vh;
        display: flex;
        z-index: 999;
        background-color: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
        display: none;
      }
      .result-modal {
        background: white;
        border-radius: 2em;
        width: 80%;
        height: 80vh;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-around;
      }
      .result-modal img {
        max-width: 20em;
      }
      .btn-done {
        border: none;
        border-radius: 2em;
        padding: 1.2em 2em;
        background-color: teal;
        font-weight: 500;
        cursor: pointer;
        color: white;
        font-size: 1.5em;
        transition: 0.5s;
        outline: none;
        box-shadow: 0px 0px 0px black;
      }
      .btn-done:hover {
        transform: translateY(-0.5em);
        box-shadow: 0px 0.5em 0px black;
      }
      .btn-done:active {
        transform: translateY(-0.25em);
        box-shadow: 0px 0.25em 0px black;
      }
      .error-connection {
        position: absolute;
        width: 100%;
        height: 100vh;
        display: flex;
        z-index: 999;
        background-color: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
        display: none;
      }
      .error-modal {
        background: white;
        border-radius: 2em;
        width: 80%;
        height: 80vh;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-around;
      }
      .error-modal img {
        max-width: 20em;
      }
      .error-modal h1 {
        color: red;
      }
      .main-room {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        height: 100vh;
        color: white;
        background-image: url("./images/bg/autumn.png");
        animation: backgroundAnim 10s infinite;
        background-repeat: no-repeat;
        background-size: cover;
        background-color: rgba(0, 0, 0, 0.8);
        background-blend-mode: overlay;
        font-size: 2em;
      }

      @keyframes backgroundAnim {
        0% {
          background-image: url("./images/bg/autumn.png");
        }
        25% {
          background-image: url("./images/bg/beach.png");
        }
        50% {
          background-image: url("./images/bg/city.png");
        }
        75% {
          background-image: url("./images/bg/gym.png");
        }
        100% {
          background-image: url("./images/bg/autumn.png");
        }
      }
    </style>
  </head>
  <body>
    <div class="game-screen-modal">
      <h1 id="countdown"></h1>
    </div>
    <div class="error-connection">
      <div class="error-modal">
        <h1>Connection with phone is reset the game</h1>
        <img src="./assets/img/readypose.svg" alt="" />
        <button class="btn-done" onclick="window.location.reload()">
          Reset Game
        </button>
      </div>
    </div>
    <div class="result-modal-backdrop">
      <div class="result-modal">
        <h1>Horray you have finished the Game</h1>
        <img src="./assets/img/readypose.svg" alt="" />
        <h1 id="done-score">Score : 10000 Points &nbsp;&nbsp;Star : 4 star</h1>
        <h1 id="done-exp">Exp : +100 Points</h1>
        <button class="btn-done" onclick="window.location.reload()">
          Back To Home
        </button>
      </div>
    </div>
    <div id="app">
      <div class="main-room">
        <h2>Room Key To Play</h2>
        <h1 id="roomKey">generating...</h1>
        <h1 id="testing"></h1>
        <h4 id="allowSongDesc">Click Button below to allow playing Song</h4>
        <button id="allowSong">play song</button>
      </div>
    </div>
    <audio id="player" autoplay loop>
      <source src="./assets/song/ukle.mp3" id="audioSource" type="audio/mp3" />
    </audio>
  </body>
  <script>
    let player = document.querySelector("#player");
    let allowSongDesc = document.querySelector("#allowSongDesc");
    let playButton = document.querySelector("#allowSong");
    playButton.style.display = "none";
    allowSongDesc.style.display = "none";
    let playerPromise = player.play();
    if (playerPromise !== undefined) {
      playerPromise
        .then((_) => {
          // Autoplay started!
        })
        .catch((error) => {
          playButton.style.display = "block";
          allowSongDesc.style.display = "block";
          playButton.addEventListener("click", () => {
            player.play();
          });
        });
    }
    /**
     * Make Socket String
     * @param {String} type
     * @param {Object} data
     * @returns {String} json message
     */
    const buildMessage = (type, data = {}) => {
      let message = {
        type,
        data,
      };
      message.data.roomId = GameState.roomId;
      return JSON.stringify(message);
    };
  </script>
  <script>
    const socket = false
      ? new WebSocket("ws://localhost:8000/room")
      : new WebSocket("wss://fitmove2021.et.r.appspot.com/room");
  </script>
  <script src="./assets/js/utils.js"></script>
  <script src="./assets/js/gameScreenMemory.js"></script>
  <script src="./assets/js/gameScreenMirror.js"></script>
  <script src="./assets/js/readyScreen.js"></script>
  <script src="./assets/js/pageSetting.js"></script>
  <script src="./assets/js/gameEvent.js"></script>
</html>
